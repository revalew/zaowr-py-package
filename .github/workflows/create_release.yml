name: Publish Python üêç distribution üì¶ to GitHub

on:
  push:
    # branches: ['master']
    # Pattern matched against refs/tags
    tags:
      - '*' # Push events to every tag not containing /
    # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade build

      - name: Build package
        run: python -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI

    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes

    needs:
      - build

    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/zaowr-polsl-kisiel

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python üêç distribution üì¶ with Sigstore
      and upload them to GitHub Release

    needs:
      - publish-to-pypi

    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      #######################################
      # Added this section for compatibility
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install compatible cryptography version
        run: pip install 'cryptography<44'

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      #######################################

#      - name: Sign the dists with Sigstore
#        uses: sigstore/gh-action-sigstore-python@v2.1.1
#        with:
#          inputs: >-
#            ./dist/*.tar.gz
#            ./dist/*.whl

      - name: Fetch commit messages
        id: get_commits
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
          echo "Previous tag: $PREVIOUS_TAG"
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> $GITHUB_ENV
          
          # Fetch commit messages only, excluding commit IDs
          COMMITS=$(git log $PREVIOUS_TAG..HEAD --pretty=format:"- %s")
          echo "Commit messages between $PREVIOUS_TAG and current tag:"
          echo "$COMMITS"
          echo "COMMITS=$COMMITS" >> $GITHUB_ENV

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes "Latest package release ${{ github.ref_name }}
          
          ## Commit Messages
          ${{ env.COMMITS }}"
        #  --notes-from-tag

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI

    needs:
      - build

    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/zaowr-polsl-kisiel

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
